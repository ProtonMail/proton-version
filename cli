const args = require('./lib/args');
const { bash } = require('./lib/cli');
const { PKG_VERSION } = require('./lib/config');
const { getDependenciesConfig } = require('./lib/utils');
const questions = require('./lib/questions');
const manageNpmLinks = require('./lib/npmLink');
const npmVersion = require('./lib/npmVersion');
const { updateDependencies, updateLock } = require('./lib/updateDependencies');
const { success, debug, log } = require('./lib/log')('proton-version');

/*
  Flow:
    - 1 we look for our current installed dependencies
    - 2 we contact the API to get the latest available
    - 3 we compute the diff and display
      - we found 3 updates availble for X,Y,Z, do you want to see the diff ?
      if yes we display diff localLog vs remote log
    - 4 do you want to update ? (none, all, select)
    Flow: All
      - we update everything
      - we commit the lock
      - we create the version
    Flow: None
      - we create the new version
    Flow: Select
      - we display a list of options to select
      - we update only the selected options
      - we commit the lock
      - we create the version
 */
async function main() {

  debug(args);
  log(`current version ${PKG_VERSION} - we will create a new ${args.version}`);

  // Detect what we can update and ask you question. To ignore it use --all
  const dependenciesToUpdate = await questions(await getDependenciesConfig());

  debug(dependenciesToUpdate);

  // Detect active npm link and asks you what we need to do
  await manageNpmLinks();
  await updateDependencies(dependenciesToUpdate);
  await updateLock();
  await npmVersion(args.version);

  success('So long, and thanks for all the fish! üê¨');
}

main();
