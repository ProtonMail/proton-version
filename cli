const prompts = require('prompts');
const execa = require('execa');
const dedent = require('dedent');

const args = require('./lib/args');
const { bash, script } = require('./lib/cli');
const { getDependenciesConfig } = require('./lib/utils');
const questions = require('./lib/questions');
const { logCommit, success, log, warn, debug } = require('./lib/log')('proton-version');

/*
  Flow:
    - 1 we look for our current installed dependencies
    - 2 we contact the API to get the latest available
    - 3 we compute the diff and display
      - we found 3 updates availble for X,Y,Z, do you want to see the diff ?
      if yes we display diff localLog vs remote log
    - 4 do you want to update ? (none, all, select)
    Flow: All
      - we update everything
      - we commit the lock
      - we create the version
    Flow: None
      - we create the new version
    Flow: Select
      - we display a list of options to select
      - we update only the selected options
      - we commit the lock
      - we create the version
 */

async function main() {

  debug(args);
  const data = await getDependenciesConfig();
  success('fetch commits from API');
  const rep = await questions(data);
  return console.log(rep)

  /*
   Ex: output
    {
      'design-system': true,
      pmcrypto: true,
      'proton-shared': false,
      'react-components': false
    }
   */
  const response = await prompts(questions);

  // Find active npm links
  const { stdout } = await bash(`find node_modules -maxdepth 1 -type l`);
  const activeNpmLinks = stdout.split('\n').filter(Boolean);
  if (activeNpmLinks.length) {
    const removeLinks = await prompts({
        type: 'confirm',
        name: 'unlink',
        message: `we need to unlink, do you confirm?`,
        initial: true,
        onRender() {
          const links = activeNpmLinks.join('\n')
          const msg = dedent`we detected active npm links,
          It is impossible to update the package-lock.json if we have active links, so we need to run:

          $ rm -rf node_modules/<dependencyn>
          > npm uninstall --no-save <dependency> should work, yet Error [0] ¬Ø\_(„ÉÑ)_/¬Ø

          We are going to unlink them for you in order to be able to update your dependencies.
          Active npm link detected:`;
          warn(msg, activeNpmLinks.map((name) => ' -' + name).join('\n'));
        }
      });

    if (!removeLinks.unlink) {
      log('stopping the process');
      process.exit(0);
    }

    log('unlinking dependencies');

    for (const link of activeNpmLinks) {
      await bash('rm -rf', [link]);
      success(`unlinking ${link}`);
    }
  }

  // Houston, we have something to update
  if (Object.values(response).filter(Boolean).length){

    for (const [dependency, runUpdate] of Object.entries(response)) {
      if (runUpdate) {
        log(`updating ${dependency}`)
        await bash('npm update', [dependency]);
        success(`update ${dependency}`);
      }
    }

    success('update done');
  }

  await script('updatePackageLock.sh');
  success('update lock done');

  await bash('npm version', [args.version]);
  success('So long and thanks for all the fish! üê¨');
}

main();
